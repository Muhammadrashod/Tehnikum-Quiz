{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rasho\\\\Downloads\\\\IT\\\\tehnikum-quiz\\\\src\\\\pages\\\\StepTwo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { AnswerItem } from \"../components/AnswerItem\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { Heading } from \"../components/heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StepTwo = () => {\n  _s();\n  const [checkedAnswer, setCheckedAnswer] = useState(null);\n  const variants = [{\n    id: \"variant-1\",\n    answerLabel: \"Ответ №1\"\n  }, {\n    id: \"variant-2\",\n    answerLabel: \"Ответ №2\"\n  }, {\n    id: \"variant-3\",\n    answerLabel: \"Ответ №3\"\n  }, {\n    id: \"variant-4\",\n    answerLabel: \"Ответ №4\"\n  }];\n  useEffect(() => {\n    console.log('Ваш вариант', checkedAnswer);\n  }, [checkedAnswer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"variants-quiz\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          currentStep: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            text: \"1. \\u0417\\u0430\\u043D\\u0438\\u043C\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\",\n            headingType: \"h2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"variants\",\n            children: variants.map(elem => /*#__PURE__*/_jsxDEV(AnswerItem, {\n              id: elem.id,\n              answerLabel: elem.answerLabel,\n              onChange: () => setCheckedAnswer(elem.id),\n              isChecked: elem.id === checkedAnswer\n            }, elem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n            path: \"/step-three\",\n            buttonType: \"button\",\n            buttonText: \"\\u0414\\u0430\\u043B\\u0435\\u0435\",\n            isDisabled: !checkedAnswer,\n            id: \"next-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(StepTwo, \"ubIdb/IocRH3oXD14Jwbn2EjmM0=\");\n_c = StepTwo;\nexport default StepTwo;\nvar _c;\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"names":["React","useEffect","useState","ProgressBar","AnswerItem","LinkButton","Heading","jsxDEV","_jsxDEV","StepTwo","_s","checkedAnswer","setCheckedAnswer","variants","id","answerLabel","console","log","className","children","currentStep","fileName","_jsxFileName","lineNumber","columnNumber","text","headingType","map","elem","onChange","isChecked","path","buttonType","buttonText","isDisabled","_c","$RefreshReg$"],"sources":["C:/Users/rasho/Downloads/IT/tehnikum-quiz/src/pages/StepTwo.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { AnswerItem } from \"../components/AnswerItem\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { Heading } from \"../components/heading\";\nconst StepTwo = () => {\n  const [checkedAnswer, setCheckedAnswer] = useState(null);\n\n  const variants = [\n    {\n      id: \"variant-1\",\n      answerLabel: \"Ответ №1\",\n    },\n    {\n      id: \"variant-2\",\n      answerLabel: \"Ответ №2\",\n    },\n    {\n      id: \"variant-3\",\n      answerLabel: \"Ответ №3\",\n    },\n    {\n      id: \"variant-4\",\n      answerLabel: \"Ответ №4\",\n    },\n  ];\n\n  useEffect(() => {\n   console.log('Ваш вариант', checkedAnswer);\n  }, [checkedAnswer])\n\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <div className=\"variants-quiz\">\n          <ProgressBar currentStep={2} />\n          <div className=\"question\">\n          <Heading text=\"1. Занимательный вопрос\" headingType=\"h2\" />\n            <ul className=\"variants\">\n              {variants.map((elem) => (\n                <AnswerItem\n                  key={elem.id}\n                  id={elem.id}\n                  answerLabel={elem.answerLabel}\n                  onChange={() => setCheckedAnswer(elem.id)}\n                  isChecked={elem.id === checkedAnswer}\n                />\n              ))}\n            </ul>\n            <LinkButton\n              path=\"/step-three\"\n              buttonType=\"button\"\n              buttonText=\"Далее\"\n              isDisabled={!checkedAnswer} \n              id=\"next-btn\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StepTwo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMW,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,WAAW;IACfC,WAAW,EAAE;EACf,CAAC,EACD;IACED,EAAE,EAAE,WAAW;IACfC,WAAW,EAAE;EACf,CAAC,EACD;IACED,EAAE,EAAE,WAAW;IACfC,WAAW,EAAE;EACf,CAAC,EACD;IACED,EAAE,EAAE,WAAW;IACfC,WAAW,EAAE;EACf,CAAC,CACF;EAEDd,SAAS,CAAC,MAAM;IACfe,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,aAAa,CAAC;EAC1C,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACEH,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBX,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBX,OAAA;QAAKU,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BX,OAAA,CAACL,WAAW;UAACiB,WAAW,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/BhB,OAAA;UAAKU,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACzBX,OAAA,CAACF,OAAO;YAACmB,IAAI,EAAC,wHAAyB;YAACC,WAAW,EAAC;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzDhB,OAAA;YAAIU,SAAS,EAAC,UAAU;YAAAC,QAAA,EACrBN,QAAQ,CAACc,GAAG,CAAEC,IAAI,iBACjBpB,OAAA,CAACJ,UAAU;cAETU,EAAE,EAAEc,IAAI,CAACd,EAAG;cACZC,WAAW,EAAEa,IAAI,CAACb,WAAY;cAC9Bc,QAAQ,EAAEA,CAAA,KAAMjB,gBAAgB,CAACgB,IAAI,CAACd,EAAE,CAAE;cAC1CgB,SAAS,EAAEF,IAAI,CAACd,EAAE,KAAKH;YAAc,GAJhCiB,IAAI,CAACd,EAAE;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKb,CACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLhB,OAAA,CAACH,UAAU;YACT0B,IAAI,EAAC,aAAa;YAClBC,UAAU,EAAC,QAAQ;YACnBC,UAAU,EAAC,gCAAO;YAClBC,UAAU,EAAE,CAACvB,aAAc;YAC3BG,EAAE,EAAC;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAxDID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA0Db,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}